// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator kysely {
    provider = "prisma-kysely"
    output   = "../src/db"
    fileName = "types.ts"
}

datasource db {
    provider          = "mysql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
    relationMode      = "prisma"
}

model User {
    id       String @id
    name     String
    username String

    Ranking                    Ranking[]
    UserRankingItemElo         UserRankingItemElo[]
    UserRankingItemChoiceIndex UserRankingItemChoiceIndex[]
}

model Ranking {
    id          Int     @id @default(autoincrement())
    userId      String
    publicId    String  @unique
    name        String  @db.VarChar(200)
    description String? @db.Text
    popularity  Int     @default(1)
    private     Boolean @default(false)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    RankingItem                RankingItem[]
    UserRankingItemChoiceIndex UserRankingItemChoiceIndex[]

    @@index([userId])
}

model RankingItem {
    id        Int     @id @unique @default(autoincrement())
    rankingId Int
    publicId  String  @unique
    text      String  @db.Text
    imageUrl  String?
    globalElo Int     @default(1000)

    ranking            Ranking              @relation(fields: [rankingId], references: [id], onDelete: Cascade)
    UserRankingItemElo UserRankingItemElo[]

    @@index([rankingId])
}

model UserRankingItemElo {
    userId        String
    rankingItemId Int
    elo           Int    @default(1000)

    user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
    rankingItem RankingItem @relation(fields: [rankingItemId], references: [id], onDelete: Cascade)

    @@id([userId, rankingItemId])
    @@unique([userId, rankingItemId])
    @@index([userId])
    @@index([rankingItemId])
}

model UserRankingItemChoiceIndex {
    userId    String
    rankingId Int
    index     Int    @default(0)

    user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    ranking Ranking @relation(fields: [rankingId], references: [id], onDelete: Cascade)

    @@id([userId, rankingId])
    @@index([userId])
    @@index([rankingId])
}
